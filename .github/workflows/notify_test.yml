name: Notify-Test

on:
  workflow_dispatch:
    inputs:
      tenant:
        description: "Tenant Slug"
        required: true
        default: "hoomans"

jobs:
  notify:
    runs-on: ubuntu-latest
    env:
      TENANT_SLUG: ${{ github.event.inputs.tenant }}
      RUN_URL: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
      DISCORD_WEBHOOK_STATUS: ${{ secrets.DISCORD_WEBHOOK_STATUS }}
      DISCORD_WEBHOOK_ALERTS: ${{ secrets.DISCORD_WEBHOOK_ALERTS }}
      DISCORD_WEBHOOK_KPI: ${{ secrets.DISCORD_WEBHOOK_KPI }}
      DISCORD_WEBHOOK_MOVERS: ${{ secrets.DISCORD_WEBHOOK_MOVERS }}
      DISCORD_WEBHOOK_HEALTH: ${{ secrets.DISCORD_WEBHOOK_HEALTH }}
      DISCORD_WEBHOOK_NEWJOINERS: ${{ secrets.DISCORD_WEBHOOK_NEWJOINERS }}

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Show which webhooks are set (redacted)
        shell: bash
        run: |
          for k in DISCORD_WEBHOOK_STATUS DISCORD_WEBHOOK_ALERTS DISCORD_WEBHOOK_KPI DISCORD_WEBHOOK_MOVERS DISCORD_WEBHOOK_HEALTH DISCORD_WEBHOOK_NEWJOINERS; do
            if [ -n "${!k}" ]; then
              # nur die Domain + Anfang zeigen, Token maskieren
              head="$(printf "%s" "${!k}" | sed 's/\?.*$//' )"
              echo "$k=SET  head=${head:0:60}..."
            else
              echo "$k=EMPTY"
            fi
          done

      - name: Fake verify.txt (Demo)
        run: |
          cat > verify.txt <<'TXT'
          Members: 375 (with points_all: 362) | LeaderboardSnapshots: 420
          MemberDailySnapshot: today=25 | total=25
          TXT
          echo "verify.txt:"
          cat verify.txt

      - name: Notify — Status
        run: python .github/scripts/discord_notify.py
        env: { MODE: status }
        continue-on-error: true

      - name: Notify — KPI
        run: python .github/scripts/discord_notify.py
        env: { MODE: kpi }
        continue-on-error: true

      - name: Notify — Movers
        run: python .github/scripts/discord_notify.py
        env: { MODE: movers }
        continue-on-error: true

      - name: Notify — Health
        run: python .github/scripts/discord_notify.py
        env: { MODE: health }
        continue-on-error: true

      - name: Notify — New Joiners
        run: python .github/scripts/discord_notify.py
        env: { MODE: joiners }
        continue-on-error: true
