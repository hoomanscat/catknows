# Example .env for local development
# Copy to .env and fill values before running the pipeline.

# Ollama HTTP base (local Ollama default)
OLLAMA_BASE=http://127.0.0.1:11434

# Optional: if your Ollama exposes a non-standard API path, set it here
# e.g. OLLAMA_API_PATH=/api/generate
OLLAMA_API_PATH=

# Path to local ollama binary (used for CLI fallback)
# On Windows this might be: C:\\Users\\You\\AppData\\Local\\Programs\\Ollama\\ollama.exe
OLLAMA_BIN=ollama

# Global default model (used if no purpose-specific override)
# Recommended: use a smaller local chat model for chat/analysis tasks
OLLAMA_MODEL=qwen2.5vl:7b

# Per-purpose model overrides (set to available local model names shown by `ollama list`)
# Replace the right-hand-side with a model present locally (do NOT auto-download large models).
# Examples below use common models seen in dev environments.
OLLAMA_MODEL_CHAT=qwen2.5vl:7b
OLLAMA_MODEL_KPI=qwen2.5vl:7b
OLLAMA_MODEL_HEALTH=qwen2.5vl:7b
OLLAMA_MODEL_SUMMARY=qwen2:7b
OLLAMA_MODEL_EMBED=nomic-embed-text:latest

# If your Ollama instance requires an API key (remote), set it here
OLLAMA_API_KEY=

# Other useful dev flags
LLM_PROVIDER=ollama
# Optional: Basis-URL überschreiben (normal nicht nötig)
# SKOOL_BASE=https://www.skool.com
# User-Agent anpassen (optional)
# SKOOL_UA=Mozilla/5.0 (Windows NT 10.0; Win64; x64) SkoolHUD/0.1
# Rate-Limit Mindestabstand in Sekunden (Standard 15)
# MIN_INTERVAL_SECONDS=15

# Discord webhooks (optional). If set, agents will post generated reports to these channels.
# Set these to your Discord webhook URLs. Leave empty to disable posting.
DISCORD_WEBHOOK_KPIS=
DISCORD_WEBHOOK_HEALTH=
DISCORD_WEBHOOK_JOINERS=
DISCORD_WEBHOOK_ALERTS=
